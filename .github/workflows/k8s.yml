name: k8s

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          image: kindest/node:v1.20.7

      - name: Wait for kind to be ready
        run: |
          kubectl wait --for=condition=ready -n kube-system -l k8s-app=kube-dns pod
          kubectl wait --for=condition=ready -n local-path-storage -l app=local-path-provisioner pod
      
      - name: Debug
        run: |
          kubectl cluster-info
          kubectl get pods -A
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Install MetalLB
        run: |
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
          docker network inspect kind
          cat << EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            namespace: metallb-system
            name: config
          data:
            config: |
              address-pools:
              - name: default
                protocol: layer2
                addresses:
                - 172.18.255.200-172.18.255.250
          EOF

      - name: Wait for MetalLB to be ready
        run: |
          kubectl wait --for=condition=ready -n metallb-system -l app=metallb pod

      - name: Skaffold
        uses: hiberbee/github-action-skaffold@1.17.0
        with:
          command: run

      - name: Logs
        run: |
          kubectl logs -l=app=linkfire-challenge
          kubectl get pods -A
          kubectl get svc -A
      
      - name: e2e
        run: |
          ip="$(kubectl get svc linkfire-challenge -ojsonpath='{.status.loadBalancer.ingress[0].ip}')"
          curl -s q --fail "$ip:80/rest/ready"
          echo ""
          curl -s q --fail "$ip:80/rest/alive"
          echo ""
          curl -s q --fail "$ip:80/rest/v1/ping"
          echo ""
          curl -s q --fail "$ip:80/rest/v1/hello" -XPOST -d '{"message":"hello github!"}'